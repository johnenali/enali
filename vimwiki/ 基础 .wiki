# 一个函数就是将一些语句集合在一起的部件，能够不止一次地在程序中运行。
# 函数是python为了代码最大程度的重用和最小化代码冗余而提供的最基本的程序结构。
# def创建函数对象并赋值给函数变量名。
# lambda创建一个函数对象并将其作为结果返回。
# yield向调用者发回一个结果对象，但记住它离开的地方。
# global声明一个模块级变量并被赋值。
# nonlocal声明了将要赋值的一个封闭的函数变量。
# return语句可选，不然返回None。
# def是一个语句，并可出现在任一语句可以出现的地方－－甚至是嵌套在其他的语句中。def在运行时才进行评估，而在def之中的代码在函数调用后才会评估。
# 多态：一个操作的意义取决于被操作对象的类型。如果传给函数的对象有预期的方法和表达式操作符，那么它们对于函数的逻辑来说就是有着即插即插用的兼容性。
# 在python中，代码不应该关心特定的数据类型，我们在python中为对象编写接口而不是数据类型。
# [x for x in s1 if x in s2]＃这意味着第一个参数支持for循环，并且第二个参数支持成员测试。
{{{
    def <name>(arg1, arg2, ...argN):
        <statements>
    }}}
